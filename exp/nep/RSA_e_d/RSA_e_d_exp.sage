from hashlib import md5

e = 65537
d = 3681507930066326375214488716493860680193572912902180388345930244005426927180078097469996734189023780372174766588631996982530226147671852839199913748414725728623907116911762801954155723826780707165233759258695857234207317267841546202232985926960905481759216386496191889714799179802853050710509118446470018142905022158220621514786856465643779028928097129404759641516901250878515298357424290665798912153094581118396592864000758329016747162137685089092655966530641507900150212713677941989812716703529555946239269234630473450321399688109147250847673877915940765244554574233258784506348060931721162256801676668132512171473
n = 17509070044467114053151810378291592699408286501659665900655096545818843579579156623649577356207986320337533938891086733399425502978227156714270300967333518147810232272935137790396916086533797329861242734436658228995518501580735225940184557234777711361252087396357106522223424807455702495240539629581009113137534993008344657486767805981339371787469097159601699137332583232053189461492518266705544482117881014727457949216518836518054510012612172279508021525200633751779924777852923856831721307680909759924420827965558492186933428293319455639202754798246271325635089016472240565253098592529191007794862641998616503324857
kphi = e*d-1

for k in range(1, e):
    if kphi%k: continue
    phi = kphi//k
    p_add_q = n-phi+1
    if len(bin(p_add_q)[2:])>1030: continue
    pq = var('p q')
    s = solve([p*q == n, p+q == p_add_q], [p, q])
    if len(s) == 0: continue
    p = int(s[0][0].rhs())
    if p > 0: break

q = n//p
flag = "flag{"+md5(str(p+q).encode()).hexdigest()+"}"
print(flag)
