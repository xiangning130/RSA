from Crypto.Util.number import *
from hashlib import md5

n = 11433201309707679878761012277665755456419397463677496301905808261798053964924581198787045636925303521112028641322310864452193750270873395860157184017518344338957681883547572568167514078066520072725117276595898263512002386997420064688495607017352969556632264308752009410553959930942638627555259900084027608723210401530426478967710652249044090983243439868677773174110217006023126308230447332893368616185153302984362127680648066296798874547982331876095869616347514347243829174751613661882398188704944669267045607365598681360782592584020361794769870357709712358418972162197688305196755235458206535693054326293617766429413
c = 7071117017814658724975355826158752911459426685911612769977412277425762391693097747001259418917800636635009117472589067690032243035148314747081428354074193120501835680371689992119114446025944022918603989518704886065710264587042448352988301795071330843865807960195036976864064059819482887304843682246463961102148269034309368031007451429803380528001739304860801003520452888131469969562376431702631360865467605857278385132582724682612026176093499571852215828263957163412944608133836404146607711449994588823044326576168216973713661463681062238867859999466340053765400492049691456924012704051995488144217305635783249973440
m0 = 104958437350676461676031882343707008647600976482725413900358965467719750306136748279667669821425015658427760022764763223989399008415243242194751293738916174870069280946598913899807067134735577349717370569041151659992964702869105272131306705940078445681735655315863386273020475195083834843911749986585674612240862765158179099393292105085693009491523144298630872759509572954847060139383624742309771007961407384246480080855158943404434672127984118170767068039994616717130959207489871091454856536256460885513584722347151868825810410724817447377744990886400140279991982436825486527405340223975762173648844531695616

PR.<x> = PolynomialRing(Zmod(n))
f = (m0 + x) ^ 3 - c

ans = f.small_roots(X=2 ^ 500)
m = ans[0]+m0

if pow(m, 3, n) == c:
    print("Find, m =", m)
else:
    print("Wrong")

flag = "flag{"+md5(long_to_bytes(m)).hexdigest()+"}"
print(flag)
