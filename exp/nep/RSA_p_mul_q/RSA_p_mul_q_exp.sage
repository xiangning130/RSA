from Crypto.Util.number import *

p_mul_q = 43432165508784625385969166079060918849439053675353630862666310116506031725488068875140561889261246067141576247818758362940901148693892664384246595413519525171872192750135261426013147223086671145823088900691849952943336449485561438405447634378410266951622159364533237773498270137220139360104494898813550314050
c = 2299737874754720804453177388024418395086905431702144418872013167766823593747812494925216350068313167829052996024065444120006349580619075765641579591847066694170258653706786860159798776640804593738185837305033709660096028374367765728783927599814068852659537947030825138295578557367098587157939233303393526815747200682699406013127933841546489146530340597348044178924724946291682155777043360447625959777963597508627604772139176498933382151072033109746353467216734137894491374700428298587021965812312953967322472755220561790395843390283660243101950993081361550966293620151305786819952855582837603663699355842080084091573
n = 21721713300754483098715096281877473405788292904323871548678734581921564869042436516743537264942864433186037377482843216390839829224189260549366859121495581116824319309348089321070588052254657461001291850278882758947921826268063131717254887711947950276849900646083805947153157494311947084275497881549254295395972040535789888532610785283818020480801683648406502117939449548146441738011635026576400445796325418069732704711789039747630005109107192054919174137929011664551630419558335581528627814395411218931008969532578522229443619026050076010297736262304434791303314864266818992758602371004891062931960846312971659131391

var('p q')
roots = solve([p*q == n, p-q == p_mul_q], [p, q])

for ans in roots:
    p,q=int(ans[0].rhs()),int(ans[1].rhs())
    if min(p,q)>0:
        break

if p-q < 0:
    p, q = q, p

assert p*q == n
m = pow(c, inverse(65537, (p-1)*(q-1)), n)
print(long_to_bytes(m))
